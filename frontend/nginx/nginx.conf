user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    upstream frontend {
      server web1:80;
    }

    upstream backend {
      server api1:39721;
    }

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

  server {
    listen  80;
    
    location / {
      root /usr/shard/nginx/html;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    location ^~ /oauth2 {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /login {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # location ^~ /ws/room {
    #   proxy_pass http://backend;

	  #   proxy_http_version      1.1;


    #   proxy_set_header       Upgrade $http_upgrade;
    #   proxy_set_header       Connection "upgrade";
    #   proxy_set_header Host $host;
    # }  
  }
  
  server {
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/npm-5/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/npm-5/privkey.pem;
    
    location ^~ /ws/room {
      proxy_pass http://backend;

	    proxy_http_version      1.1;


      proxy_set_header       Upgrade $http_upgrade;
      proxy_set_header       Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }  
       


}


}